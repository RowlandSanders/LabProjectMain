//ClassCast
import java.io.PrintWriter;
import java.io.File;
import java.io.FileNotFoundException;
/*
class OverflowException extends Exception { 
  public OverflowException(String errorMessage) {
      super(errorMessage);
      System.out.println("OverflowException");
  }
}
*/


class Car {
public void drive(String str){
  System.out.println("This car drives");
}
}

class subaru extends Car {
public void drive(String str){
  System.out.println("subaru");
}
}

class wrx extends subaru {
public void drive(String str){
  System.out.println("wrx");
}
}

class Main {
  
static int max= Integer.MAX_VALUE;
static int min= Integer.MIN_VALUE;

public static int sum(int a,int b) throws OverflowException{
		int results=a+b;
    if(results == a + b && b == results - a){
      throw new OverflowException("OverflowError");
    }
    else{
      System.out.println("NO OverflowError");
      
    }
return results;
	}
  
	public static int divid(int a, int b) {
		return a/b;
	}
	public static int pow2(int a) {
		return a*a;
	}

public static void main(String[] args) throws FileNotFoundException {
  int a=1,b=0;
  System.out.println("Hello world!");
  
  
  try{
  a=1;
  b=0; 
  divid(a,b);
  sum(max,1);
  //for classCast example
  Car x = new Car();
  wrx y = (wrx) new subaru();
  if(y instanceof Car){
    throw new ClassCastException("You cannot create a new instance of an object that hasn't been defined in the subclass");
  }

int arr[]=new int[7];
//divide by zero exception
// a=1;
// b=0; 
// divid(a,b);
//null pointer 
arr[10]=30/3;
//file not found 
File file= new File("input.txt");
if(file== null){
throw new IllegalArgumentException("The filename cannot be null!"); // done :3
}

//overflow

//sum(max,1);

		
double c = Integer.parseInt("No Numbers Here");

System.out.println("Last Statement of try block");

}

catch(ClassCastException e){
  System.out.println(e.getMessage());
}

catch(ArithmeticException e){

  System.out.println("You should not divide a number by zero");

}

catch(ArrayIndexOutOfBoundsException e){

System.out.println("Accessing array elements outside of the limit");

}

catch(OverflowException er){
  //System.out.println("Error message: "+er.getMessage());
}

catch(Exception e){

System.out.println("Some Other Exception");

System.out.println(e);

}
System.out.println("Out of the try-catch block");

}
}